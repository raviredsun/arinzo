<?php 
/**
 * Twenty Nineteen functions and definitions
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 *
 * @package WordPress
 * @subpackage Twenty_Nineteen
 * @since Twenty Nineteen 1.0
 */

use MPHB\Utils\ParseUtils;
use MPHB\Utils\BookingDetailsUtil;

use MPHB\Entities\Booking;
use MPHB\Entities\ReservedRoom;
use MPHB\Entities\RoomType;
use MPHB\Admin\MenuPages\EditBooking;
/**
 * Twenty Nineteen only works in WordPress 4.7 or later.
 */
if ( version_compare( $GLOBALS['wp_version'], '4.7', '<' ) ) {
	require get_template_directory() . '/inc/back-compat.php';
	return;
}

if ( ! function_exists( 'twentynineteen_setup' ) ) :
	/**
	 * Sets up theme defaults and registers support for various WordPress features.
	 *
	 * Note that this function is hooked into the after_setup_theme hook, which
	 * runs before the init hook. The init hook is too late for some features, such
	 * as indicating support for post thumbnails.
	 */
	function twentynineteen_setup() {
		/*
		 * Make theme available for translation.
		 * Translations can be filed in the /languages/ directory.
		 * If you're building a theme based on Twenty Nineteen, use a find and replace
		 * to change 'twentynineteen' to the name of your theme in all the template files.
		 */
		load_theme_textdomain( 'twentynineteen', get_template_directory() . '/languages' );

		// Add default posts and comments RSS feed links to head.
		add_theme_support( 'automatic-feed-links' );

		/*
		 * Let WordPress manage the document title.
		 * By adding theme support, we declare that this theme does not use a
		 * hard-coded <title> tag in the document head, and expect WordPress to
		 * provide it for us.
		 */
		add_theme_support( 'title-tag' );

		/*
		 * Enable support for Post Thumbnails on posts and pages.
		 *
		 * @link https://developer.wordpress.org/themes/functionality/featured-images-post-thumbnails/
		 */
		add_theme_support( 'post-thumbnails' );
		set_post_thumbnail_size( 1568, 9999 );

		// This theme uses wp_nav_menu() in two locations.
		register_nav_menus(
			array(
				'menu-1' => __( 'Primary', 'twentynineteen' ),
				'footer' => __( 'Footer Menu', 'twentynineteen' ),
				'social' => __( 'Social Links Menu', 'twentynineteen' ),
			)
		);

		/*
		 * Switch default core markup for search form, comment form, and comments
		 * to output valid HTML5.
		 */
		add_theme_support(
			'html5',
			array(
				'search-form',
				'comment-form',
				'comment-list',
				'gallery',
				'caption',
				'script',
				'style',
			)
		);

		/**
		 * Add support for core custom logo.
		 *
		 * @link https://codex.wordpress.org/Theme_Logo
		 */
		add_theme_support(
			'custom-logo',
			array(
				'height'      => 190,
				'width'       => 190,
				'flex-width'  => false,
				'flex-height' => false,
			)
		);

		// Add theme support for selective refresh for widgets.
		add_theme_support( 'customize-selective-refresh-widgets' );

		// Add support for Block Styles.
		add_theme_support( 'wp-block-styles' );

		// Add support for full and wide align images.
		add_theme_support( 'align-wide' );

		// Add support for editor styles.
		add_theme_support( 'editor-styles' );

		// Enqueue editor styles.
		add_editor_style( 'style-editor.css' );

		// Add custom editor font sizes.
		add_theme_support(
			'editor-font-sizes',
			array(
				array(
					'name'      => __( 'Small', 'twentynineteen' ),
					'shortName' => __( 'S', 'twentynineteen' ),
					'size'      => 19.5,
					'slug'      => 'small',
				),
				array(
					'name'      => __( 'Normal', 'twentynineteen' ),
					'shortName' => __( 'M', 'twentynineteen' ),
					'size'      => 22,
					'slug'      => 'normal',
				),
				array(
					'name'      => __( 'Large', 'twentynineteen' ),
					'shortName' => __( 'L', 'twentynineteen' ),
					'size'      => 36.5,
					'slug'      => 'large',
				),
				array(
					'name'      => __( 'Huge', 'twentynineteen' ),
					'shortName' => __( 'XL', 'twentynineteen' ),
					'size'      => 49.5,
					'slug'      => 'huge',
				),
			)
		);

		// Editor color palette.
		add_theme_support(
			'editor-color-palette',
			array(
				array(
					'name'  => 'default' === get_theme_mod( 'primary_color' ) ? __( 'Blue', 'twentynineteen' ) : null,
					'slug'  => 'primary',
					'color' => twentynineteen_hsl_hex( 'default' === get_theme_mod( 'primary_color' ) ? 199 : get_theme_mod( 'primary_color_hue', 199 ), 100, 33 ),
				),
				array(
					'name'  => 'default' === get_theme_mod( 'primary_color' ) ? __( 'Dark Blue', 'twentynineteen' ) : null,
					'slug'  => 'secondary',
					'color' => twentynineteen_hsl_hex( 'default' === get_theme_mod( 'primary_color' ) ? 199 : get_theme_mod( 'primary_color_hue', 199 ), 100, 23 ),
				),
				array(
					'name'  => __( 'Dark Gray', 'twentynineteen' ),
					'slug'  => 'dark-gray',
					'color' => '#111',
				),
				array(
					'name'  => __( 'Light Gray', 'twentynineteen' ),
					'slug'  => 'light-gray',
					'color' => '#767676',
				),
				array(
					'name'  => __( 'White', 'twentynineteen' ),
					'slug'  => 'white',
					'color' => '#FFF',
				),
			)
		);

		// Add support for responsive embedded content.
		add_theme_support( 'responsive-embeds' );
	}
endif;
add_action( 'after_setup_theme', 'twentynineteen_setup' );

/**
 * Register widget area.
 *
 * @link https://developer.wordpress.org/themes/functionality/sidebars/#registering-a-sidebar
 */
function twentynineteen_widgets_init() {

	register_sidebar(
		array(
			'name'          => __( 'Footer', 'twentynineteen' ),
			'id'            => 'sidebar-1',
			'description'   => __( 'Add widgets here to appear in your footer.', 'twentynineteen' ),
			'before_widget' => '<section id="%1$s" class="widget %2$s">',
			'after_widget'  => '</section>',
			'before_title'  => '<h2 class="widget-title">',
			'after_title'   => '</h2>',
		)
	);

}
add_action( 'widgets_init', 'twentynineteen_widgets_init' );

/**
 * Set the content width in pixels, based on the theme's design and stylesheet.
 *
 * Priority 0 to make it available to lower priority callbacks.
 *
 * @global int $content_width Content width.
 */
function twentynineteen_content_width() {
	// This variable is intended to be overruled from themes.
	// Open WPCS issue: {@link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1043}.
	// phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedVariableFound
	$GLOBALS['content_width'] = apply_filters( 'twentynineteen_content_width', 640 );
}
add_action( 'after_setup_theme', 'twentynineteen_content_width', 0 );

/**
 * Enqueue scripts and styles.
 */
function twentynineteen_scripts() {
	wp_enqueue_style( 'twentynineteen-style', get_stylesheet_uri(), array(), wp_get_theme()->get( 'Version' ) );

	wp_style_add_data( 'twentynineteen-style', 'rtl', 'replace' );

	if ( has_nav_menu( 'menu-1' ) ) {
		wp_enqueue_script( 'twentynineteen-priority-menu', get_theme_file_uri( '/js/priority-menu.js' ), array(), '20181214', true );
		wp_enqueue_script( 'twentynineteen-touch-navigation', get_theme_file_uri( '/js/touch-keyboard-navigation.js' ), array(), '20181231', true );
	}

	wp_enqueue_style( 'twentynineteen-print-style', get_template_directory_uri() . '/print.css', array(), wp_get_theme()->get( 'Version' ), 'print' );

	if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
		wp_enqueue_script( 'comment-reply' );
	}
}
add_action( 'wp_enqueue_scripts', 'twentynineteen_scripts' );

/**
 * Fix skip link focus in IE11.
 *
 * This does not enqueue the script because it is tiny and because it is only for IE11,
 * thus it does not warrant having an entire dedicated blocking script being loaded.
 *
 * @link https://git.io/vWdr2
 */
function twentynineteen_skip_link_focus_fix() {
	// The following is minified via `terser --compress --mangle -- js/skip-link-focus-fix.js`.
	?>
	<script>
	/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",function(){var t,e=location.hash.substring(1);/^[A-z0-9_-]+$/.test(e)&&(t=document.getElementById(e))&&(/^(?:a|select|input|button|textarea)$/i.test(t.tagName)||(t.tabIndex=-1),t.focus())},!1);
	</script>
	<?php
}
add_action( 'wp_print_footer_scripts', 'twentynineteen_skip_link_focus_fix' );

/**
 * Enqueue supplemental block editor styles.
 */
function twentynineteen_editor_customizer_styles() {

	wp_enqueue_style( 'twentynineteen-editor-customizer-styles', get_theme_file_uri( '/style-editor-customizer.css' ), false, '1.1', 'all' );

	if ( 'custom' === get_theme_mod( 'primary_color' ) ) {
		// Include color patterns.
		require_once get_parent_theme_file_path( '/inc/color-patterns.php' );
		wp_add_inline_style( 'twentynineteen-editor-customizer-styles', twentynineteen_custom_colors_css() );
	}
}
add_action( 'enqueue_block_editor_assets', 'twentynineteen_editor_customizer_styles' );

/**
 * Display custom color CSS in customizer and on frontend.
 */
function twentynineteen_colors_css_wrap() {

	// Only include custom colors in customizer or frontend.
	if ( ( ! is_customize_preview() && 'default' === get_theme_mod( 'primary_color', 'default' ) ) || is_admin() ) {
		return;
	}

	require_once get_parent_theme_file_path( '/inc/color-patterns.php' );

	$primary_color = 199;
	if ( 'default' !== get_theme_mod( 'primary_color', 'default' ) ) {
		$primary_color = get_theme_mod( 'primary_color_hue', 199 );
	}
	?>

	<style type="text/css" id="custom-theme-colors" <?php echo is_customize_preview() ? 'data-hue="' . absint( $primary_color ) . '"' : ''; ?>>
		<?php echo twentynineteen_custom_colors_css(); ?>
	</style>
	<?php
}
add_action( 'wp_head', 'twentynineteen_colors_css_wrap' );

/**
 * SVG Icons class.
 */
require get_template_directory() . '/classes/class-twentynineteen-svg-icons.php';

/**
 * Custom Comment Walker template.
 */
require get_template_directory() . '/classes/class-twentynineteen-walker-comment.php';

/**
 * Common theme functions.
 */
require get_template_directory() . '/inc/helper-functions.php';

/**
 * SVG Icons related functions.
 */
require get_template_directory() . '/inc/icon-functions.php';

/**
 * Enhance the theme by hooking into WordPress.
 */
require get_template_directory() . '/inc/template-functions.php';

/**
 * Custom template tags for the theme.
 */
require get_template_directory() . '/inc/template-tags.php';

/**
 * Customizer additions.
 */
require get_template_directory() . '/inc/customizer.php';
add_action( 'wp_loaded', 'disable_wp_theme_update_loaded' );
function disable_wp_theme_update_loaded() {
    remove_action( 'load-update-core.php', 'wp_update_themes' );
    add_filter( 'pre_site_transient_update_themes', '__return_null' );
	
	
}

add_action('wp_head', 'global_site_tag_script');
add_action('wp_head', 'global_site_tag_scriptsss');
function global_site_tag_script(){
?>
	<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-44808677-3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-44808677-3');
</script>
<?php
};

function global_site_tag_scriptsss(){
	if(in_array(get_the_ID(), [13789, 13792, 13943, 14194, 14038, 14045, 14198, 14048])) {
?>
<button onclick="topFunction()" id="go-to-top" title="<?php _e("Go to top", "twentynineteen") ?>"><?php _e("Top", "twentynineteen") ?></button>
<style>
#go-to-top {
  display: none;
  position: fixed;
  bottom: 80px;
  right: 30px;
  z-index: 99;
  font-size: 18px;
  border: none;
  outline: none;
  background-color: red;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 4px;
}

#go-to-top:hover {
  background-color: #555;
}

.vce-google-fonts-heading-inner {
	margin-top: 10px !important;
	margin-bottom: 10px
	line-height: 20px;
}
.vce-google-fonts-heading-wrapper {
    line-height: 20px;
}

@media screen and (max-width: 960px) {
.vce {
	margin-bottom: 20px !important;
}
}

</style>
<script>
//Get the button
var mybutton = document.getElementById("go-to-top");
window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
    mybutton.style.display = "block";
  } else {
    mybutton.style.display = "none";
  }
}

// When the user clicks on the button, scroll to the top of the document
function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
</script>
<?php
	}
};



function custom_login_css_admin_page() {
    ?>
    <style type="text/css">
    	body.login {
		    background-color: #ffffff;
		}

		body.login div#login h1 a {
		    background-image: none,url(https://booking.arienzobeachclub.com/wp-content/uploads/2020/06/arienzo_logo.png);
		    width: 150px;
		    height: px;
		    background-size: 150px px;
		}

		#login form#loginform, #login form#registerform, #login form#lostpasswordform {
			border: 0;
			box-shadow: 0 1px 3px rgb(0 0 0 / 18%);
		}

		#login form#loginform .input, #login form#registerform .input, #login form#lostpasswordform .input {
		    border-color: #4d8fcc;
		    box-shadow: unset;
		    color: #616161;
		    border-radius: 0;
		}

		#login form#loginform label, #login form#registerform label, #login form#lostpasswordform label {
		    color: #616161;
		}

		#login form#loginform .forgetmenot label, #login form#registerform .forgetmenot label, #login form#lostpasswordform .forgetmenot label {
		}

		#login form .submit .button {
		    height: auto;
		    background-color: #4d8fcc;
		    border-color: #4d8fcc;
		    text-shadow: 0 -1px 1px #4d8fcc,1px 0 1px #4d8fcc,0 1px 1px #4d8fcc,-1px 0 1px #4d8fcc;
		}

		#login form .submit .button:hover, #login form .submit .button:focus {
		    background-color: #4d8fcc;
		    border-color: #4d8fcc;
		}

		.login #nav, .login #nav a, .login #backtoblog a {
		    color: #616161;
		}

		.login #backtoblog a:hover, .login #nav a:hover {
		    color: #4d8fcc;
		}
    </style>
    <?php
}
add_action('login_head', 'custom_login_css_admin_page');

function custom_login_footer_admin_page(){
	?>
	<script type="text/javascript">
		(function(){
			document.getElementsByClassName("login")[0].getElementsByTagName("h1")[0].getElementsByTagName("a")[0].href = "<?php echo home_url(); ?>";
		}())
	</script>
	<?php
}

add_action('login_footer', 'custom_login_footer_admin_page');

function my_custom_post_location() {
    $labels = array(
    	'name' => _x( 'Places', 'post type general name' ),
    	'singular_name' => _x( 'Place', 'post type singular name' ),
    	'add_new' => _x( 'Add New', 'Place' ),
    	'add_new_item' => __( 'Add New Place' ),
    	'edit_item' => __( 'Edit Place' ),
    	'new_item' => __( 'New Place' ),
    	'all_items' => __( 'All Places' ),
    	'view_item' => __( 'View Place' ),
    	'search_items' => __( 'Search Place' ),
    	'not_found' => __( 'No Place found' ),
    	'not_found_in_trash' => __( 'No Place found in the Trash' ),
    	'parent_item_colon' => '',
    	'menu_name' => 'Places'
    );
    $args = array(
    'labels' => $labels,
    'description' => 'Displays city Place and their ratings',
    'public' => true,
    'menu_position' => 3,
    'supports' => array( 'title',),
    'has_archive' => true,
    );
    register_post_type( 'location', $args );
}
add_action( 'init', 'my_custom_post_location' );


function booking_confiration_link_custom_meta(){
    
	add_meta_box(
        'confiration_link_meta',
        'Booking Confirmation Link',
        'confiration_link_meta',
        '',
        'side',
        'low'
    );
}
function confiration_link_meta(){
    global $post;
    $url = home_url( '/booking-confirmation/booking-confirmed/?booking_id=' . $post->ID ); ?>
    <script type="text/javascript">
        jQuery(document).ready(function(){
            jQuery(".copy_clip_board").click(function (e) {
               e.preventDefault();
               const textarea = document.createElement('textarea')
          
                // Set the value of the text
                textarea.value = jQuery("#"+jQuery(this).data("id")).val();
                
                // Make sure we cant change the text of the textarea
                textarea.setAttribute('readonly', '');
                
                // Hide the textarea off the screnn
                textarea.style.position = 'absolute';
                textarea.style.left = '-9999px';
                
                // Add the textarea to the page
                document.body.appendChild(textarea);
                // Copy the textarea
                textarea.select()
                try {
                  var successful = document.execCommand('copy');
                  this.copied = true
                } catch(err) {
                  this.copied = false
                }
                textarea.remove()
        
                var copyText = document.getElementById(jQuery(this).data("select"));
                /* Select the text field */
                copyText.select();
                copyText.setSelectionRange(0, 99999); /* For mobile devices */
                /* Copy the text inside the text field */
             
              /* Alert the copied text */
              jQuery(this).text("<?php echo  "Copied" ?>");
              jQuery(this).attr("title","<?php echo  "Copied" ?>");
              $this = jQuery(this);
              setTimeout(function(){ 
                $this.text("<?php echo  "Copy" ?>");
                $this.attr("title","<?php echo  "Copy" ?>");
              }, 2000);
            });        
        })
    
    </script>
    <input id="confirmation_url" style="width:100%" class="confirmation_url" type="text" value="<?php echo $url ?>" readonly>
    <button style="margin-top:10px;" name="save" type="button"  data-id="confirmation_url" data-select="confirmation_url"  class="button button-primary button-large copy_clip_board" value="Copy">Copy</button>
    <?php
}

add_action( 'admin_head', 'custom_dashboard_widget' );
function custom_dashboard_widget() {

	// Bail if not viewing the main dashboard page
	if ( get_current_screen()->base !== 'dashboard' ) {
		return;
	}

	?>
    <style type="text/css">
        #custom-id{background:none;}#custom-id:before{display:none}
    </style>
	<div id="custom-id" class="welcome-panel" style="display: none;">
		<div class="welcome-panel-content">
			<style type="text/css">
                 span.place_dot {
                       width: 20px;
                       height: 20px;
                       border: 1px solid #000000;
                       background: #dddddd;
                       display: inline-block;
                       margin-right: 10px;
                       border-radius: 10px;
                 }
                 span.place_dot.active {
                        background: #ffa9c6;
                 }
                 .tbl-bg-yellow{
                        background: #d9a407;
                        min-width: 10px;
                 }
                 .tbl-map td{
                        border: none;
                            text-align: center;
                            padding: 0.5em;
                 }
                 .tbl-map{
                     margin: 10px 0 1rem;
                    border-collapse: collapse;
                    width: 100%;
                 }
                 .my_lbl{
                       font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
                 }
                 @media only screen and (max-width: 768px) {
                      span.place_dot {
                               width: 13px;
                               height: 13px;
                               border: 1px solid #000000;
                               background: #dddddd;
                               display: inline-block;
                               margin-right: 0;
                               border-radius: 10px;
                      }
                      .tbl-map td {
                          border: none;
                          padding: 2px;
                      }
                      .my_lbl{
                           font-size: 15px;
                      }
                      .tbl-bg-yellow{
                           padding: 5px 7px !important
                      }
                 }

				.edit_td{
				    cursor: pointer;
				}
				.w-100{
					width: 100%;
					max-width: 25rem;
				}
				.editPop{
					overflow: hidden;
				    padding: 25px;
				    position: fixed;
				    width: 50%;
				    min-width: 400px;
				    top: 10%;
				    left: 25%;
				    display: none;
				    background: #fff;
				    z-index: 10000;
				    transition: 0.5s;
				    height: 500px;
				    overflow-y: scroll;
				    box-shadow: 0 1px 1px rgb(0 0 0 / 4%);
				    border: 1px solid #ccd0d4;
				}
				.mphb_checkout-services-list label{
					display: inline-block;
				}
				.main_loader{
				    position: fixed;
				    background: #fff;
				    width: 100%;
				    height: 100%;
				    left: 0;
				    top: 0;
				    opacity: 0.5;
				    z-index: 100000;
				    transition: 0.5s;
				}

				.loader4 {
				   position: absolute;
				   top: calc(50% - 22px);
				   left: calc(50% - 22px);
				   width:45px;
				   height:45px;
				   display:inline-block;
				   padding:0px;
				   border-radius:100%;
				   border:5px solid;
				   border-top-color:rgba(246, 36, 89, 1);
				   border-bottom-color:rgba(255,255,255, 0.3);
				   border-left-color:rgba(246, 36, 89, 1);
				   border-right-color:rgba(255,255,255, 0.3);
				   -webkit-animation: loader4 1s ease-in-out infinite;
				   animation: loader4 1s ease-in-out infinite;
				}
				@keyframes loader4 {
				   from {transform: rotate(0deg);}
				   to {transform: rotate(360deg);}
				}
				@-webkit-keyframes loader4 {
				   from {-webkit-transform: rotate(0deg);}
				   to {-webkit-transform: rotate(360deg);}
				}

            </style>
            <?php
            $lunch_time = "12:00";
            global $wpdb;
            if(isset($_GET['fdate']) && $_GET['fdate']){
                $mphb_check_in_date = $_GET['fdate'];
            }else{
                $mphb_check_in_date =  date( 'Y-m-d' );   
            }
        
            $table_selected_ids = [];
            $booking_ids = $wpdb->get_results ("
                SELECT post_id 
                FROM  $wpdb->postmeta
                LEFT JOIN ".$wpdb->prefix."posts ON (".$wpdb->prefix."posts.ID = ".$wpdb->postmeta.".post_id)
                    WHERE `meta_key` = 'mphb_check_in_date'
                    AND `meta_value` = '$mphb_check_in_date' AND post_status NOT IN ('cancelled','trash','special-cancellation')
            ");
            $mphb_place = array();
            foreach ( $booking_ids as $booking_id )
            {
                if($booking_id->post_id != $_POST['id']){
                    $mmm = get_post_meta($booking_id->post_id, 'mphb_place', true);
                    if($mmm){
                        foreach($mmm AS $kk => $vv){
                            if(isset($mphb_place[$kk])){
                                $mphb_place[$kk] = array_merge($mphb_place[$kk],$vv);
                            }else{
                                $mphb_place[$kk] = $vv;
                            }
                        }
                    }    
                }
                
            }
                $args = array(
                    'post_type' => 'location',
                    'posts_per_page' => -1,
                    'post_status' => 'publish',
                    'orderby' => 'post_title',
                    'meta_key' => 'location_priority',
                    'orderby'   => 'meta_value',
                    'meta_query' => array(
                        array(
                            'key' => 'location_type',
                            'value' => "Basic"
                        )
                    ),
                    'order' => 'DESC'
                );
        
                $basic_locations = get_posts($args);
                
                $args = array(
                    'post_type' => 'location',
                    'posts_per_page' => -1,
                    'post_status' => 'publish',
                    //'orderby' => 'post_title',
                    'meta_key' => 'location_priority',
                    'orderby'   => 'meta_value',
                    'meta_query' => array(
                        array(
                            'key' => 'location_type',
                            'value' => "Main"
                        )
                    ),
                    'order' => 'DESC'
                );
        
                $main_locations = get_posts($args);
                $total_row = 0;
                $url = get_dashboard_url().'?fdate=';
                $return = '<input type="date" placeholder="Date" title="Date" class="fdate" value="'.$mphb_check_in_date.'" />';
                $return .= '<table class="tbl-map">';
                $basics_row = array();
                $main_row = array();
                if($basic_locations){
                    foreach($basic_locations AS $key => $value){ 
                        $return .= '<tr>';
                        $arr = get_field("location_names",$value->ID); 
                        $arr = explode("|",$arr);
                        $total = 0;
                        $colls = "";
                        $count = 0;
                        if($arr){
                            $count = count($arr);
                            $colls .= "<tr>";
                            foreach($arr AS $key => $vvv){
                                $rows = explode(",",$vvv);
                                $total += count($rows);
                                
                                foreach($rows AS $kk => $vv){
                                    $colls .= "<td>";
                                        $colls .= '<span class="place_dot '.(isset($mphb_place[$value->ID]) && in_array( $vv, $mphb_place[$value->ID]) ? "active" : "").'"></span>';        
                                    $colls .= "</td>";
                                }
                                
                                if($count > 1 && $key != $count - 1){
                                    $colls .= "<td class='tbl-bg-yellow'>";
                                        $colls .= '<span></span>';        
                                    $colls .= "</td>";    
                                    $total = $total+1;
                                }
                                $colls .= '<td colspan="{total_rows}"  class="tbl-bg-yellow">';
                                $colls .= '</td>';
                            }
                            $colls .= "</tr>";
                        }
                            /*$return .= '<td colspan="{total_rows}" class="tbl-bg-yellow">';
                            $return .= '</td>';
        		            $return .= '<td colspan="'.($total ? $total : 1).'">';
                                $return .= '<lable class="my_lbl" for="mphb_place_'.$value->ID.'">'.$value->post_title.'</lable>';
                            $return .= '</td>';*/
                        $return .= '</tr>';    
                        $return .= $colls;
                        $basics_row[] = ($total ? $total : 1);
                    } 
                }else{
                    $return .= '<tr>';
                        $return .= '<td colspan="{total_rows}"  class="tbl-bg-yellow">';
                        $return .= '</td>';
                    $return .= '</tr>';
                }
                if($main_locations){
                    
                    foreach($main_locations AS $key => $value){ 
                        $return .= '<tr>';
                        $arr = get_field("location_names",$value->ID); 
                        $arr = explode("|",$arr);
                        $total = 0;
                        $colls = "";
                        $count = 0;
                        $first_count = 1;
                        $td_space = "";
                        $td_row = array();
                        if($arr){
                            $count = count($arr);
                            $colls .= "<tr>";
                            foreach($arr AS $key => $vvv){
                                
                                $rows = explode(",",$vvv);
                                $total += count($rows);
                                if(!$key){
                                    $first_count = count($rows);
                                }else{
                                    $td_row[] =  count($rows);
                                }
                                foreach($rows AS $kk => $vv){
                                    $colls .= "<td>";
                                        $colls .= '<span class="place_dot '.(isset($mphb_place[$value->ID]) && in_array( $vv, $mphb_place[$value->ID]) ? "active" : "").'"></span>';        
                                    $colls .= "</td>";
                                }
                                
                                if($count > 1 && $key != $count - 1){
                                    $colls .= "<td class='tbl-bg-yellow'>";
                                        $colls .= '<span></span>';        
                                    $colls .= "</td>";    
                                    $td_space .= "<td class='tbl-bg-yellow'>";
                                        $td_space .= '<span></span>';        
                                    $td_space .= "</td>";    
                                    $total = $total+1;
                                }
                                
                            }
                            $colls .= "</tr>";
                        }
        		            $return .= '<td colspan="'.($first_count ? $first_count : 1).'">';
                                //$return .= '<lable class="my_lbl" for="mphb_place_'.$value->ID.'">'.$value->post_title.'</lable>';
                            $return .= '</td>';
                            if($arr){
                                $return .= $td_space;
                                $count = count($td_row);
                                foreach($td_row AS $kk => $vv){
                                    $return .= '<td colspan="'.($vv ? $vv : 1).'">';
                                    $return .= '</td>';
                                    if($count > 1 && $kk != $count - 1){
                                        $return .= "<td class='tbl-bg-yellow'>";
                                            $return .= '<span></span>';        
                                        $return .= "</td>";   
                                    }
                                }
                            }
                        $return .= '</tr>';    
                        $return .= $colls;
                        $main_row[] = ($total ? $total : 1);
                    } 
                }
                $return .= '</table>';
                $return .= '<img width="100%" src="https://booking.arienzobeachclub.com/wp-content/uploads/2021/12/imgpsh_fullsize_anim-1.jpg">';
                
                if($main_row && $basics_row){
                    $total_row = max($main_row) - max($basics_row);    
                }else if($main_row){
                    $total_row = max($main_row);    
                }else if($basics_row){
                    $total_row = max($basics_row);    
                }else{
                    $total_row = 1;
                }
                $return = str_replace('{total_rows}', ($total_row ? $total_row : 1), $return);
                echo $return;
                if(isset($_GET['frdate']) && $_GET['frdate']){
	                $frdate = $_GET['frdate'];
	            }else{
	                $frdate =  date( 'Y-m-d' );   
	            }
	            $frname = isset($_GET['frname']) ? $_GET['frname'] : "";
				$frid = isset($_GET['frid']) ? $_GET['frid'] : "";
				if(!$frid){
			        $args = array(
			            'start_date' => $frdate,
			            'end_date' => $frdate,
			            "room" => "-1",
			            "status" => "all",
			            "search_by" => "reserved-rooms",
			            "columns" => array(
			                "booking-id",
			                "booking-status",
			                "check-in",
			                "check-out",
			                "room-type",
			                "room-type-id",
			                "room",
			                "rate",
			                "adults",
			                "children",
			                "services",
			                "first-name",
			                "last-name",
			                "email",
			                "phone",
			                "country",
			                "address",
			                "city",
			                "state",
			                "postcode",
			                "customer-note",
			                "guest-name",
			                "coupon",
			                "price",
			                "paid",
			                "payments",
			                "date",
			                "lunch_time",
			                "beach_arrival_time",
			            )
			        );

			        $query = new \MPHB\CSV\Bookings\BookingsQuery($args);
			        $attr = array(
			            'posts_per_page' => -1,
			            'post_type' => 'mphb_booking',
			            'post_status' => 'confirmed',
			            'fields' => 'ids',
			            'meta_query' => array()
			        );

		            $attr['meta_query'][] = array(
		                'key' => 'mphb_check_in_date',
		                'value' => $args['start_date'],
		                'compare' => '=',
		            );
		            if($frname){
		            	$frname_v = explode(" ", trim($frname));
			            $attr['meta_query'][] = array(
			                'key' => 'mphb_first_name',
			                'value' => $frname_v[0],
			                'compare' => 'like',
			            );
			            /*unset($frname_v[0]);
			            if($frname_v){
				            $attr['meta_query'][] = array(
				                'key' => 'mphb_last_name',
				                'value' => implode(" ", $frname_v),
				                'compare' => '=',
				            );
			            }*/
		            }

			        $query = new WP_Query($attr);
			        $ids = $query->posts;
			    }else{
			        $ids[] = $frid;
			    }
		        ?>

            <div style="width:100%">
            	<div style="width:100%;margin: 20px 0;">
            		<form action="" method="GET">
	            		<table style="width:100%;">
	            			<tr>
	            				<td>
	            					<input type="date" placeholder="Date" title="Date" name="frdate" value="<?php echo $frdate ?>"  style="width:100%;"/>
	            				</td>
	            				<td>
	            					<input type="text" placeholder="Name" title="Name" name="frname" value="<?php echo $frname ?>"  style="width:100%;"/>
	            				</td>
	            				<td>
	            					<input type="text" placeholder="ID" title="ID" name="frid" value="<?php echo $frid ?>"  style="width:100%;"/>
	            				</td>
	            				<td width="70px">
	            					<input type="submit" value="Submit" class="button" />
	            				</td>
	            			</tr>
	            		</table>
            		</form>
            	</div>
	        	<table class="widefat">
		            <thead>
		            <tr>
		                <th>Booking Id</th>
		                <th>Full Name</th>
		                <th>Phone</th>
		                <th>Guests</th>
		                <th>Price</th>
		                <th>Arrival time</th>
		                <th>Lunch time</th>
		                <th>Services</th>
		                <th>Location</th>
		                <th>Table</th>
		                <th>Notes</th>
		                <th width="120">Status</th>
		            </tr>
		            </thead>
		            <tbody>
		        <?php
		        if($ids){
		        	$bookings = MPHB()->getBookingRepository()->findAll(array('post__in' => $ids));
		        	?>

			            <?php foreach ($bookings as $booking) {
			                $id = $booking->getId();
			                $customer = $booking->getCustomer();


					        $reservedRooms = $booking->getReservedRooms();
					        $guest = "";
					        if (!empty($reservedRooms) && !$booking->isImported()) {
					            $adultsTotal = 0;
					            $childrenTotal = 0;
					            foreach ($reservedRooms as $reservedRoom) {
					                $adultsTotal += $reservedRoom->getAdults();
					                $childrenTotal += $reservedRoom->getChildren();
					            }

					            $guest .= 'Adults: ';
					            $guest .= $adultsTotal;
					            if ($childrenTotal > 0) {
					                $guest .= '<br/>';
					                $guest .= 'Children: ';
					                $guest .= $childrenTotal;
					            }
					        }

			                $price = $booking->getTotalPrice();
			                $metas = get_post_meta($id);
			                $mphb_place = get_post_meta($id,"mphb_place",1);
			                $places = array();
			                if($mphb_place){
				                foreach ($mphb_place as $key => $value) {
				                    foreach ($value as $key => $value) {
				                        $places[] = $value;
				                    }
				                }
			                }
			                 //echo "<pre>"; print_r($mphb_place); echo "</pre>";die; 
			                $beach_arrival_time = $metas['beach_arrival_time'][0];
			                $lunch_time = $metas['lunch_time'][0];
			                

			                $mphb_table_id = get_post_meta($id, 'arf_cp_table_id', true);

			                $table_selected_ids = [];
			                $tables = [];

			                $ids = get_post_meta($id, 'arf_cp_table_id', true);
			                if(is_array($ids)){
			                    $table_selected_ids = $ids;
			                }else{
			                    $table_selected_ids[] = $ids;
			                }

			                if($table_selected_ids) {
			                    $args = array(
			                        'post_type' => 'arf_pt_table',
			                        'posts_per_page' => -1,
			                        'post_status' => 'publish',
			                        'orderby' => 'post_title',
			                        'order' => 'ASC'
			                    );
			                    $args['post__in'] = $table_selected_ids;
			                    $arf_pt_tables = get_posts($args);
			                    foreach ($arf_pt_tables as $key => $value) {
			                        $tables[] = $value->post_title;
			                    }
			                }
			                $qr_code_status = get_post_meta($id, 'arf_qr_code_status', true);
			                ?>
			                <tr>
			                    <!-- <td><a href="<?php echo admin_url("admin.php?page=mphb_edit_booking&booking_id=".$id) ?>" target="_blank"><?php echo $id ?></a></td> -->
			                    <td><a href="#" class="show_pop" data-id="<?php echo $id ?>"><?php echo $id ?></a></td>

			                    <td class="edit_td td_data" style="text-align: left;">
			                    	<span class="data_show"><?php echo $customer->getName() ?></span>
                                    <input type="text" data-field="name" data-id="<?php echo $id ?>" class="form-control data_input" value="<?php echo $customer->getName() ?>" style="display: none;">
			                    </td>
			                    <td class="edit_td td_data">
			                    	<span class="data_show"><?php echo $customer->getPhone() ?></span>
                                    <input type="text" data-field="phone" data-id="<?php echo $id ?>" class="form-control data_input" value="<?php echo $customer->getPhone() ?>" style="display: none;">
			                    	
			                    </td>
			                    <td><?php echo $guest ?></td>
			                    <td><?php echo $price; ?></td>

			                    <td><?php echo $beach_arrival_time ?></td>
			                    <td><?php echo $lunch_time ?></td>
			                    <td><?php 

							        $reservedRooms = $booking->getReservedRooms();
							        foreach ($reservedRooms as $reservedRoom) {
							            $reservedServices = $reservedRoom->getReservedServices();
							            $placeholder = ' &#8212;';
							            if (!empty($reservedServices)) {
							                echo '<ol>';
							                foreach ($reservedServices as $reservedService) {
							                    echo '<li>';
							                    echo '<a target="_blank" href="' . esc_url(get_edit_post_link($booking->getId())) . '">' . esc_html($reservedService->getTitle()) . '</a>';
							                    if ($reservedService->isPayPerAdult()) {
							                        echo ' <em>' . sprintf(_n('x %d guest', 'x %d guests', $reservedService->getAdults(), 'motopress-hotel-booking'), $reservedService->getAdults()) . '</em>';
							                    }
							                    if ($reservedService->isFlexiblePay()) {
							                        echo ' <em>' . sprintf(_n('x %d time', 'x %d times', $reservedService->getQuantity(), 'motopress-hotel-booking'), $reservedService->getQuantity()) . '</em>';
							                    }
							                    echo '</li>';
							                }
							                echo '</ol>';
							            } else {
							                echo $placeholder;
							            }
							        }
			                     ?></td>
			                    <td><?php echo implode(",", $places) ?></td>
			                    <td><?php echo implode(",", $tables) ?></td>
			                    <td></td>
			                    <td>
			                    	<?php if (empty($qr_code_status)) { ?>
		                    			NOT CHECKED IN
		                    		<?php }else{ ?>
		                    			CHECKED IN
		                    		<?php } ?>
			                    </td>
			                </tr>
			            <?php } ?>
		        	<?php
		        }else{ ?>
		        	<tr>
		        		<td colspan="10" align="center">No Record Found</td>
		        	</tr>
		        <?php } ?>

			            </tbody>
			        </table>
            </div>
		</div>
	</div>
	<div style="" class="editPop">
		<div class="headerPop" style="text-align:right"><a href="#" class="closePop" style="margin:10px 10px 0 0;">X</a></div>
		<div class="bodyPop"></div>
	</div>
	<div class="main_loader" style="display:none"><div class="loader4"></div></div>
	<script>
		jQuery(document).ready(function($) {
			$('#welcome-panel').after($('#custom-id').show());
			$('.fdate').change(function(){
			    location = "<?php echo get_dashboard_url() ?>?fdate="+$(this).val();
			})
			/*$('.frdate').change(function(){
			    location = "<?php echo get_dashboard_url() ?>?frdate="+$(this).val();
			})*/
			$('.edit_td').dblclick(function(){
	            /*if($(this).data("edit") == "0"){*/
	                /*$(this).data("edit",1);*/
	                $(".data_show").show();
	                $(".data_input").hide();

	                $(this).find(".data_show").hide();
	                $(this).find(".data_input").show().focus();
	            /*}else{

	            }*/
	        });

            $('.data_input').on('blur change',function(){
                $this = $(this);
                fun_change_val($this);
            })

            var fun_change_val = function($this){   
                var field = $this.data("field");
                var id = $this.data("id");
                var data_val = $this.val();
                $.ajax({
                    url: "<?php echo admin_url('admin-ajax.php'); ?>",
                    type: "POST",
                    dataType:"json",
                    data:{
                        action : "change_booking_details",
                        id : id,
                        field : field,
                        data_val : data_val,
                    },
                    success: function(data) {
                        $(".data_show").show();
                        $(".data_input").hide();
                        
                        $this.parent(".td_data").find(".data_show").text($this.val());
                    }
                });
            }

            $(".closePop").click(function (e) {
            	e.preventDefault();
            	$(".editPop").hide();
            })
            $(".show_pop").click(function (e) {
            	e.preventDefault();
            	$this = $(this);
                var id = $this.data("id");
                $.ajax({
                    url: "<?php echo admin_url('admin-ajax.php'); ?>",
                    type: "POST",
                    dataType:"html",
                    beforeSend:function(){
                		$(".main_loader").show()
                	},
                	complete:function(){
                		$(".main_loader").hide()
                	},
                    data:{
                        action : "get_booking_details",
                        id : id,
                        frdate : "<?php echo $frdate ?>",
                        frname : "<?php echo $frname ?>",
                        frid : "<?php echo $frid ?>",
                        debug : "debug",
                    },
                    success: function(data) {
                    	$(".editPop .bodyPop").html(data);
                    	$(".editPop").show();
                    }
                });
            });
            $(document).delegate(".postEditBook",'submit',function (e) {
            	e.preventDefault();
            	if($("#mphb_place_switch_location").val() && $("#mphb_place_switch").data("count") < $("#mphb_place_switch_location").val().length){
            		alert("Select "+$("#mphb_place_switch").data("count")+" Switch Location");
            		return false;
            	}
            	$this = $(this);
                var id = $this.data("id");
                $.ajax({
                    url: "<?php echo admin_url('admin-ajax.php'); ?>",
                    type: "POST",
                    dataType: "JSON",
                    data:$this.serialize(),
                    success: function(data) {
                    	location.reload();
                    	/*$(".editPop .bodyPop").html("");
                    	$(".editPop").hide();*/
                    }
                });
            });

            $(document).delegate("#mphb_place_switch",'change',function (e) {
            	html = "";
            	console.log($("#mphb_location_data"+$(this).val()).length)
            	if($("#mphb_location_data"+$(this).val()).length){
            		$ddd =  JSON.parse($("#mphb_location_data"+$(this).val()).text());
            		$.each($ddd,function(i,jj){
            			$.each(jj,function(ii,j){
            				html += "<option value='"+i+"-"+j+"'>"+j+"</option>";
            			})
            		})
            	}
				$("#mphb_place_switch_location").html(html);
            });
		});
	</script>

<?php }
add_action('wp_ajax_nopriv_update_booking_details', 'update_booking_details_fun');
add_action('wp_ajax_update_booking_details', 'update_booking_details_fun');

function update_booking_details_fun(){
	$json = array();
	if(!empty($_POST['booking_id'])){
        $checkInDate = ParseUtils::parseCheckInDate($_POST['check_in_date'], array('allow_past_dates' => true));
        $checkOutDate = ParseUtils::parseCheckOutDate($_POST['check_out_date'], array('check_booking_rules' => false, 'check_in_date' => $checkInDate));
        $booking = mphb_get_booking($_POST['booking_id'], true);
		
        if(isset($_POST['mphb_place_switch']) && isset($_POST['mphb_place_switch_location']) && $_POST['mphb_place_switch'] && $_POST['mphb_place_switch_location']) {

        	$mphb_place0 = get_post_meta($_POST['booking_id'], 'mphb_place', true);
        	$mphb_place_booking = array();

        	$mphb_place1 = get_post_meta($_POST['mphb_place_switch'], 'mphb_place', true);
        	$mphb_place_switecher = array();

        	foreach ($mphb_place0 as $key => $value) {
        		foreach ($value as $kk => $vv) {
        			$mphb_place_booking[$key."-".$vv] = $vv;
        		}
        	}
        	
        	foreach ($mphb_place1 as $key => $value) {
        		foreach ($value as $kk => $vv) {
        			$mphb_place_switecher[$key."-".$vv] = $vv;
        		}
        	}
        	/*echo "<pre>"; print_r($mphb_place_booking); echo "</pre>";
        	echo "<pre>"; print_r($mphb_place_switecher); echo "</pre>";die; 

			$mphb_place_booking_update = array();
			$mphb_place_switecher_update = array();*/

			$i = 0;
			$count = count($_POST['mphb_place_switch_location']);
			foreach ($mphb_place_booking as $key => $value) {
				$mphb_place_switecher[$key] = $value;
				unset($mphb_place_booking[$key]);
				$i++;
				if($i == $count){
					break;
				}
			}
			foreach ($_POST['mphb_place_switch_location'] as $key => $value) {
				$mphb_place_booking[$value] = explode("-", $value)[1];
				unset($mphb_place_switecher[$value]);
			}
			$mphb_place = array();
			foreach ($mphb_place_booking as $key => $value) {
				$vvv = explode("-", $key);
				$mphb_place[$vvv[0]][] = $value;
			}
            update_post_meta($booking->getId(), "mphb_place", $mphb_place);

			$mphb_place = array();
			foreach ($mphb_place_switecher as $key => $value) {
				$vvv = explode("-", $key);
				$mphb_place[$vvv[0]][] = $value;
			}
            update_post_meta($_POST['mphb_place_switch'], "mphb_place", $mphb_place);
        }
        $roomDetails = ParseUtils::parseRooms($_POST['mphb_room_details'], array(
            'check_in_date'  => $checkInDate,
            'check_out_date' => $checkOutDate,
            'edit_booking'   => $booking
        ));

        $oldRooms = $booking->getReservedRooms();

        $uids = array();

        foreach ($oldRooms as $reservedRoom) {
            $uids[$reservedRoom->getRoomId()] = $reservedRoom->getUid();
        }

        // Create new list of reserved rooms
        $newRooms = array();

        foreach ($roomDetails as $room) {
            $services = array_map(array('\MPHB\Entities\ReservedService', 'create'), $room['services']);
            $services = array_filter($services); // Filter NULLs

            $uid = isset($uids[$room['room_id']]) ? $uids[$room['room_id']] : mphb_generate_uid();

            $newRooms[] = new ReservedRoom(array(
                'room_id'           => $room['room_id'],
                'rate_id'           => $room['rate_id'],
                'adults'            => $room['adults'],
                'children'          => $room['children'],
                'guest_name'        => $room['guest_name'],
                'reserved_services' => $services,
                'uid'               => $uid
            ));
        }


        // Update booking with new data
        $booking->setDates($checkInDate, $checkOutDate);
        $booking->setRooms($newRooms);
        $booking->updateTotal();

        // Update booking
        $saved = MPHB()->getBookingRepository()->save($booking);

        if ($saved) {
            MPHB()->getBookingRepository()->updateReservedRooms($booking->getId());
        } else {
            throw new Error(__('Unable to update booking. Please try again.', 'motopress-hotel-booking'));
        }


		if($_POST['mphb_beach_arrival_time']) {
            update_post_meta($booking->getId(), "beach_arrival_time", $_POST['mphb_beach_arrival_time']);
        }

        if($_POST['mphb_lunch_time']) {
            update_post_meta($booking->getId(), "lunch_time", $_POST['mphb_lunch_time']);
        }
		
		if($_POST['mphb_table_id']) {
            update_post_meta($booking->getId(), "arf_cp_table_id", $_POST['mphb_table_id']);
        }
        if(isset($_POST['mphb_place_switch']) && isset($_POST['mphb_place_switch_location']) && $_POST['mphb_place_switch'] && $_POST['mphb_place_switch_location']) {
        	$mphb_place = get_post_meta($_POST['booking_id'], 'mphb_place', true);

            update_post_meta($_POST['mphb_place_switch'], "mphb_place", $mphb_place);
			$mphb_place = array();        	
			foreach ($_POST['mphb_place_switch_location'] as $key => $value) {
				$vvv = implode("-", $value);
				if(count($vvv) == 2 ){
					$mphb_place[$vvv[0]][] = $vvv[1];
				}
			}
            update_post_meta($booking->getId(), "mphb_place", $mphb_place);
        }
        /*if(isset($_POST['mphb_place'])) {
            update_post_meta($booking->getId(), "mphb_place", $_POST['mphb_place']);
        }*/

        if(isset($_POST['mphb_place_2'])) {
            update_post_meta($booking->getId(), "mphb_place_2", $_POST['mphb_place_2']);
        }

        if(isset($_POST['mphb_place_3'])) {
            update_post_meta($booking->getId(), "mphb_place_3", $_POST['mphb_place_3']);
        }

        if(isset($_POST['mphb_place_4'])) {
            update_post_meta($booking->getId(), "mphb_place_4", $_POST['mphb_place_4']);
        }

        if(isset($_POST['mphb_place_5'])) {
            update_post_meta($booking->getId(), "mphb_place_5", $_POST['mphb_place_5']);
        }

        if(isset($_POST['mphb_place_6'])) {
            update_post_meta($booking->getId(), "mphb_place_6", $_POST['mphb_place_6']);
        }

        if(isset($_POST['mphb_place_7'])) {
            update_post_meta($booking->getId(), "mphb_place_7", $_POST['mphb_place_7']);
        }


        $booking->addLog(__('Booking was edited.', 'motopress-hotel-booking'));

        // Reload booking after update. Refresh its data, such as reserved rooms
        // and their IDs
        $booking = mphb_get_booking($booking->getId(), true);
        do_action('mphb_update_edited_booking', $booking, $oldRooms);

		$json = array("success"=>1);
	}
	echo json_encode($json);wp_die();
}
add_action('wp_ajax_nopriv_get_booking_detail_by_id', 'get_booking_detail_by_id_fun');
add_action('wp_ajax_get_booking_detail_by_id', 'get_booking_detail_by_id_fun');

function get_booking_detail_by_id_fun(){
	$json = array();
	if(isset($_POST['id']) && $_POST['id']){
		$booking = mphb_get_booking($_POST['id'], true);

		$reservedRooms = $booking->getReservedRooms();

		$guest = "";
        if (!empty($reservedRooms) && !$booking->isImported()) {
            $adultsTotal = 0;
            $childrenTotal = 0;
            foreach ($reservedRooms as $reservedRoom) {
                $adultsTotal += $reservedRoom->getAdults();
                $childrenTotal += $reservedRoom->getChildren();
            }

            $guest .= 'Adults: ';
            $guest .= $adultsTotal;
            if ($childrenTotal > 0) {
                $guest .= '<br/>';
                $guest .= 'Children: ';
                $guest .= $childrenTotal;
            }
        }
        $services_html = "";
        $reservedRooms = $booking->getReservedRooms();

        foreach ($reservedRooms as $reservedRoom) {
            $reservedServices = $reservedRoom->getReservedServices();
            $placeholder = ' &#8212;';
            if (!empty($reservedServices)) {
                $services_html .= '<ol style="margin-left: 1em;">';
                foreach ($reservedServices as $reservedService) {
                    $services_html .= '<li>';

                    $services_html .= '<a target="_blank" href="' . esc_url(get_edit_post_link($booking->getId())) . '">' . esc_html($reservedService->getTitle()) . '</a>';
                    if ($reservedService->isPayPerAdult()) {
                        $services_html .= ' <em>' . sprintf(_n('x %d guest', 'x %d guests', $reservedService->getAdults(), 'motopress-hotel-booking'), $reservedService->getAdults()) . '</em>';
                    }
                    if ($reservedService->isFlexiblePay()) {
                        $services_html .= ' <em>' . sprintf(_n('x %d time', 'x %d times', $reservedService->getQuantity(), 'motopress-hotel-booking'), $reservedService->getQuantity()) . '</em>';
                    }
                    $services_html .= '</li>';
                }
                $services_html .= '</ol>';
            } else {
                $services_html .= "";
            }
        }

        $json = array(
        	"services" => $services_html,
        	"guest" => $guest,
        );
	}	
    echo json_encode($json);wp_die();
}
add_action('wp_ajax_nopriv_get_booking_details', 'get_booking_details_fun');
add_action('wp_ajax_get_booking_details', 'get_booking_details_fun');

function get_booking_details_fun()
{
	if(isset($_POST['id']) && $_POST['id']){
		ini_set('display_errors', 1);
		ini_set('display_startup_errors', 1);
		error_reporting(E_ALL);
		$_GET['booking_id'] = $_POST['id'];
		$booking = mphb_get_booking($_POST['id'], true);
		//$checkInDate = get_post_meta($_POST['id'],"mphb_check_in_date",true);
		//$checkOutDate = get_post_meta($_POST['id'],"mphb_check_out_date",true);
		$checkInDateStr = $booking->getCheckInDate()->format("d/m/Y");
		$checkInDateStr2 = $booking->getCheckInDate()->format("Y-m-d");
        $checkOutDateStr =  $booking->getCheckOutDate()->format("d/m/Y");

		$checkInDate = ParseUtils::parseCheckInDate($checkInDateStr, array('allow_past_dates' => true));
        $checkOutDate = ParseUtils::parseCheckOutDate($checkOutDateStr, array('check_booking_rules' => false, 'check_in_date' => $checkInDate));

		$map_rooms = array();
        $availableRooms = mphb_get_available_rooms($checkInDate, $checkOutDate, array('exclude_bookings' => $booking->getId()));
        $roomsUtil = BookingDetailsUtil::createFromAvailableRooms($availableRooms);

        $availableRooms = $roomsUtil->addTitles()->getValues();
        
        // Prepare reserved rooms list
        $roomsUtil = BookingDetailsUtil::createFromBooking($booking);

        $reservedRooms = $roomsUtil->addTitles()->addCapacities()->getValues();
        foreach($reservedRooms AS $key => $value){
            $map_rooms[] = array(
                "room_id" =>  $value['room_id'],
                "reserved_room_id" => $value['room_id'],
            );
        }

        $bookedRooms = $booking->getRoomIds();
        $rooms = array();
        $roomDetails = array();

    
        foreach ($map_rooms as $mapInfo) {
            if (!isset($mapInfo['room_id'], $mapInfo['reserved_room_id'])) {
                continue;
            }

            $roomId = mphb_posint($mapInfo['room_id']);
            $reservedRoomId = mphb_posint($mapInfo['reserved_room_id']);

            if (!in_array($reservedRoomId, $bookedRooms)) {
                $reservedRoomId = 0;
            }

            if ($roomId > 0) {
                $rooms[$roomId] = $reservedRoomId;
            }
        }

        $roomsMap = mphb_array_flip_duplicates($rooms); // [Reserved room ID => Room ID or IDs]

        // Build checkout room details
        $roomsUtil = BookingDetailsUtil::createFromRooms(array_keys($rooms));
        $roomsUtil->addCapacities()->addRates($checkInDate, $checkOutDate)->addPresets($booking, $roomsMap);

        // Use room IDs as keys to simplify the search in filter functions. But
        // don't forget that CheckoutView will only work with default indexes
        // and fail on custom ones
        $roomDetails = $roomsUtil->getValues();

        // Add "allowed_rate_ids"
        foreach ($roomDetails as $roomId => $room) {
            $rateIds = array_map(function ($rate) { return $rate->getId(); }, $room['allowed_rates']);
            $roomDetails[$roomId]['allowed_rate_ids'] = $rateIds;
        }
        $rooms = $roomDetails;

        new EditBooking\CheckoutControl($booking);
	?>
    
    <!-- <form class="" action="<?php echo esc_attr(admin_url('admin.php?page=mphb_edit_booking&booking_id='.$_POST['id'])); ?>" method="POST"> -->
    <form class="postEditBook form-wrap" >
        <!-- <input type="hidden" name="debug" value="debug"> -->
        <input type="hidden" name="action" value="update_booking_details">
        <input type="hidden" name="booking_id" value="<?php echo esc_html($_POST['id']); ?>">
        <input type="hidden" name="step" value="<?php echo esc_html("booking"); ?>">
        <input type="hidden" name="mphb_check_in_date" value="<?php echo esc_html($checkInDateStr2); ?>">
        <input type="hidden" name="check_in_date" value="<?php echo esc_html($checkInDateStr); ?>">
        <input type="hidden" name="check_out_date" value="<?php echo esc_html($checkOutDateStr); ?>">
        <input type="hidden" name="redirect" value="<?php echo esc_url(admin_url("?frdate=".$_POST['frdate']."&frname=".$_POST['frname']."&frid=".$_POST['frid'])); ?>">
        <?php wp_nonce_field('edit-booking', 'checkout_nonce'); ?>
        
        
        <section id="mphb-booking-details" class="mphb-booking-details mphb-checkout-section">
            <h3 class="mphb-booking-details-title">
                <?php _e('New Booking Details', 'motopress-hotel-booking'); ?>
            </h3>

			<p class="mphb-check-in-date">
				<span><?php _e( 'Check-in:', 'motopress-hotel-booking' ); ?></span>
				<time datetime="<?php echo $booking->getCheckInDate()->format( 'Y-m-d' ); ?>">
					<strong>
						<?php echo \MPHB\Utils\DateUtils::formatDateWPFront( $booking->getCheckInDate() ); ?>
					</strong>
				</time>,
				<span>
					<?php _ex( 'from', 'from 10:00 am', 'motopress-hotel-booking' ); ?>
				</span>
				<time datetime="<?php echo MPHB()->settings()->dateTime()->getCheckInTime(); ?>">
					<?php echo MPHB()->settings()->dateTime()->getCheckInTimeWPFormatted(); ?>
				</time>
			</p>

			<p class="mphb-check-out-date" style="display: none;">
				<span><?php _e( 'Check-out:', 'motopress-hotel-booking' ); ?></span>
				<time datetime="<?php echo $booking->getCheckOutDate()->format( 'Y-m-d' ); ?>">
					<strong>
						<?php echo \MPHB\Utils\DateUtils::formatDateWPFront( $booking->getCheckOutDate() ); ?>
					</strong>
				</time>,
				<span>
					<?php _ex( 'until', 'until 10:00 am', 'motopress-hotel-booking' ); ?>
				</span>
				<time datetime="<?php echo MPHB()->settings()->dateTime()->getCheckOutTime(); ?>">
					<?php echo MPHB()->settings()->dateTime()->getCheckOutTimeWPFormatted(); ?>
				</time>
			</p>
            
	        <div class="mphb-reserve-rooms-details">
	            <?php
	            foreach ($booking->getReservedRooms() as $index => $reservedRoom) {
	            	$roomIndex = $index;
	                $roomTypeId = apply_filters('_mphb_translate_post_id', $reservedRoom->getRoomTypeId());
	                $roomType = MPHB()->getRoomTypeRepository()->findById($roomTypeId);
	                ?>

			        <p class="mphb-room-title">
			            <span>
			                <?php _e('Accommodation:', 'motopress-hotel-booking'); ?>
			            </span>
			            <a href="<?php echo esc_url(get_edit_post_link($roomId)); ?>" target="_blank">
			                <?php echo get_the_title($roomId); ?>
			            </a>
			        </p>

	                <div class="mphb-room-details" data-index="<?php echo esc_attr($index); ?>">
	                    <input type="hidden" name="mphb_room_details[<?php echo esc_attr($index); ?>][room_type_id]" value="<?php echo esc_attr($roomType->getOriginalId()); ?>">
	                    <input type="hidden" name="mphb_room_details[<?php echo esc_attr($index); ?>][room_id]" value="<?php echo esc_attr($reservedRoom->getRoomId()); ?>">

	                    
						<h3 class="mphb-room-number">
							<?php printf( __( 'Accommodation #%d', 'motopress-hotel-booking' ), $roomIndex + 1 ); ?>
						</h3>
						<p class="mphb-room-type-title">
							<span>
								<?php _e( 'Accommodation Type:', 'motopress-hotel-booking' ); ?>
							</span>
							<a href="<?php echo esc_url( $roomType->getLink() ); ?>" target="_blank">
								<?php echo $roomType->getTitle(); ?>
							</a>
						</p>

	                </div>
	                <?php
						global $wpdb;
						$namePrefix = 'mphb_room_details[' . esc_attr($roomIndex) . ']';
				        $idPrefix = 'mphb_room_details-' . esc_attr($roomIndex);

				        // Value -1 means that nothing is selected ("— Select —" option active)
				        $adultsCapacity = $roomType->getAdultsCapacity();
				        $minAdults = mphb_get_min_adults();
				        $maxAdults = $adultsCapacity;
				        $presetAdults = -1;


				        $roomId = $reservedRoom->getRoomId();
				         
				        if (isset($rooms[$roomId]['presets']['adults'])) {
				            $presetAdults = $rooms[$roomId]['presets']['adults'];
				        }

				        $childrenCapacity = $roomType->getChildrenCapacity();
				        $minChildren = mphb_get_min_children();
				        $maxChildren = $childrenCapacity;
				        $presetChildren = -1;

				        if (isset($rooms[$roomId]['presets']['children'])) {
				            $presetChildren = $rooms[$roomId]['presets']['children'];
				        }


				        $totalCapacity = $roomType->getTotalCapacity();

				        if (!empty($totalCapacity)) {
				            $maxAdults = max($minAdults, min($adultsCapacity, $totalCapacity));
				            $maxChildren = max($minChildren, min($childrenCapacity, $totalCapacity));

				            if ($presetAdults + $presetChildren > $totalCapacity) {
				                // Someone misused the filters? Reset values
				                $presetAdults = $maxAdults;
				                $presetChildren = -1;
				            }
				        } else {
				            $totalCapacity = $roomType->calcTotalCapacity();
				        }

				        $childrenAllowed = $maxChildren > 0 && MPHB()->settings()->main()->isChildrenAllowed();

				        $presetGuestName = "";


				        if (isset($rooms[$roomId]['presets']['guest_name'])) {
				            $presetGuestName = $rooms[$roomId]['presets']['guest_name'];
				        }


				        $beacharrivaltime = get_post_meta($_GET["booking_id"], 'beach_arrival_time', true); 
				        $lunchtime = get_post_meta($_GET["booking_id"], 'lunch_time', true);
				        // $lunch = get_post_meta($_GET["booking_id"], 'lunch_time', true); 
						$mphb_place = get_post_meta($_GET["booking_id"], 'mphb_place', true);
						//echo "<pre>";print_r($mphb_place);
						$mphb_place_1 = get_post_meta($_GET["booking_id"], 'mphb_place_1', true);
				        $mphb_place_2 = get_post_meta($_GET["booking_id"], 'mphb_place_2', true);
				        $mphb_place_3 = get_post_meta($_GET["booking_id"], 'mphb_place_3', true);
				        $mphb_place_4 = get_post_meta($_GET["booking_id"], 'mphb_place_4', true);
				        $mphb_place_5 = get_post_meta($_GET["booking_id"], 'mphb_place_5', true);
				        $mphb_place_6 = get_post_meta($_GET["booking_id"], 'mphb_place_6', true);
				        $mphb_place_7 = get_post_meta($_GET["booking_id"], 'mphb_place_7', true);
				        $mphb_table_id = get_post_meta($_GET["booking_id"], 'arf_cp_table_id', true);

				        ?>
				        <?php if (MPHB()->settings()->main()->isAdultsAllowed()) { ?>
				            <p class="mphb-adults-chooser">
				                <label for="<?php echo esc_attr($idPrefix); ?>-adults">
				                    <?php
				                    if (MPHB()->settings()->main()->isChildrenAllowed()) {
				                        _e('Adults', 'motopress-hotel-booking');
				                    } else {
				                        _e('Guests', 'motopress-hotel-booking');
				                    }
				                    ?>
				                    <abbr title="<?php _e('Required', 'motopress-hotel-booking'); ?>">*</abbr>
				                </label>
				                <select name="<?php echo esc_attr($namePrefix); ?>[adults]" id="<?php echo esc_attr($idPrefix); ?>-adults" class="mphb_sc_checkout-guests-chooser w-100 mphb_checkout-guests-chooser" required="required" data-max-allowed="<?php echo esc_attr($adultsCapacity); ?>" data-max-total="<?php echo esc_attr($totalCapacity); ?>">
				                    <option value=""><?php _e('— Select —', 'motopress-hotel-booking'); ?></option>
				                    <?php for ($i = 1; $i <= $maxAdults; $i++) { ?>
				                        <option value="<?php echo $i; ?>" <?php selected($i, $presetAdults); ?>>
				                            <?php echo $i; ?>
				                        </option>
				                    <?php } ?>
				                </select>
				            </p>
				        <?php } else { ?>
				            <input type="hidden" id="<?php echo esc_attr($idPrefix); ?>-adults" name="<?php echo esc_attr($namePrefix); ?>[adults]" value="<?php echo esc_attr($minAdults); ?>">
				        <?php } ?>

				        <?php if ($childrenAllowed) { ?>
				            <p class="mphb-children-chooser">
				                <label for="<?php echo esc_attr($idPrefix); ?>-children">
				                    <?php printf(__('Children %s', 'motopress-hotel-booking'), MPHB()->settings()->main()->getChildrenAgeText()); ?>
				                    <abbr title="<?php _e('Required', 'motopress-hotel-booking'); ?>">*</abbr>
				                </label>
				                <select name="<?php echo esc_attr($namePrefix); ?>[children]" id="<?php echo esc_attr($idPrefix); ?>-children" class="mphb_sc_checkout-guests-chooser w-100 mphb_checkout-guests-chooser" required="required" data-max-allowed="<?php echo esc_attr($childrenCapacity); ?>" data-max-total="<?php echo esc_attr($totalCapacity); ?>">
				                    <option value=""><?php _e('— Select —', 'motopress-hotel-booking'); ?></option>
				                    <?php for ($i = 0; $i <= $maxChildren; $i++) { ?>
				                        <option value="<?php echo $i; ?>" <?php selected($i, $presetChildren); ?>>
				                            <?php echo $i; ?>
				                        </option>
				                    <?php } ?>
				                </select>
				            </p>
				        <?php } else { ?>
				            <input type="hidden" id="<?php echo esc_attr($idPrefix); ?>-children" name="<?php echo esc_attr($namePrefix); ?>[children]" value="<?php echo esc_attr($minChildren); ?>">
				        <?php } ?>

				        <p class="mphb-guest-name-wrapper">
				            <label for="<?php echo esc_attr($idPrefix); ?>-guest-name">
				                <?php _e('Full Guest Name', 'motopress-hotel-booking'); ?>
				            </label>
				            <input type="text" name="<?php echo esc_attr($namePrefix); ?>[guest_name]" id="<?php echo esc_attr($idPrefix); ?>-guest-name" value="<?php echo esc_attr($presetGuestName); ?>" class="w-100">
				        </p>
				        <p>
				            <label for="mphb_beach_arrival_time">
				                <?php _e('Beach arrival time', 'motopress-hotel-booking'); echo $beacharrivaltime; ?>
				            </label><br>
				            <select name="mphb_beach_arrival_time" id="mphb_beach_arrival_time" class="w-100">
				            <?php
				                if ($beacharrivaltime == '10:00'){
				                    echo '<option selected value="10:00">10:00</option>';    
				                } else {
				                    echo '<option value="10:00">10:00</option>';    
				                }
				                if ($beacharrivaltime == '10:30'){
				                    echo '<option selected value="10:30">10:30</option>';    
				                } else {
				                    echo '<option value="10:30">10:30</option>';    
				                }
				                if ($beacharrivaltime == '11:00'){
				                    echo '<option selected value="11:00">11:00</option>';    
				                } else {
				                    echo '<option value="11:00">11:00</option>';    
				                }
				                if ($beacharrivaltime == '11:30'){
				                    echo '<option selected value="11:30">11:30</option>';    
				                } else {
				                    echo '<option value="11:30">11:30</option>';    
				                }
				                if ($beacharrivaltime == '12:00'){
				                    echo '<option selected value="12:00">12:00</option>';    
				                } else {
				                    echo '<option value="12:00">12:00</option>';    
				                }                
				            ?>
				            </select>
				        </p>
				        <p>
				            <label for="mphb_lunch_time">
				                <?php _e('Lunch time', 'motopress-hotel-booking'); ?>
				            </label><br>
				            <select name="mphb_lunch_time" id="mphb_lunch_time" class="w-100">
				            <?php 
				                if ($lunchtime == '12:00'){
				                    echo '<option selected value="12:00">12:00</option>';    
				                } else {
				                    echo '<option value="12:00">12:00</option>';    
				                }
				                if ($lunchtime == '13:00'){
				                    echo '<option selected value="13:00">13:00</option>';
				                } else {
				                    echo '<option value="13:00">13:00</option>';
				                }                
				                if ($lunchtime == '14:30'){
				                    echo '<option selected value="14:30">14:30</option>';
				                } else {
				                    echo '<option value="14:30">14:30</option>'; 
				                }
				                if ($lunchtime == '15:30'){
				                    echo '<option selected value="15:30">15:30</option>';
				                } else {
				                    echo '<option value="15:30">15:30</option>';
				                }
				                if ($lunchtime == '11:59'){
				                    echo '<option selected value="11:59">Beach Lunch</option>';
				                } else {
				                    echo '<option value="11:59">Beach Lunch</option>';
				                }                
				            ?>
				            </select>
				        </p>
						<?php
				        $lunch_time = get_post_meta($booking->getId(), 'lunch_time', true);
				        if(!$lunch_time){
				        	$lunch_time = "12:00";
				        }
				        $mphb_check_in_date = $booking->getCheckInDate()->format( 'Y-m-d' );

				        $table_selected_ids = [];
				        $booking_ids = $wpdb->get_results ("
				    SELECT post_id 
				    FROM  $wpdb->postmeta
				        LEFT JOIN ".$wpdb->prefix."posts ON (".$wpdb->prefix."posts.ID = ".$wpdb->postmeta.".post_id)
				        WHERE `meta_key` = 'mphb_check_in_date' AND ".$wpdb->prefix."posts.post_status != 'cancelled' AND ".$wpdb->prefix."posts.post_status != 'trash' AND ".$wpdb->prefix."posts.post_status != 'special-cancellations'
				        AND `meta_value` = '$mphb_check_in_date' AND ".$wpdb->prefix."posts.ID != '".$_GET["booking_id"]."'
				"); 
				        $booking_slot = array();
				        $booking_slot_switch = array();
				        foreach ( $booking_ids as $booking_id )
				        {
				            $item_lunch_time = get_post_meta($booking_id->post_id, 'lunch_time', true);
				            if($item_lunch_time == $lunch_time) {
				                $ids = get_post_meta($booking_id->post_id, 'arf_cp_table_id', true);
				                if(is_array($ids)){
				                    $table_selected_ids = array_merge($table_selected_ids,$ids);
				                }else{
				                    $table_selected_ids[] = $ids;
				                }
				            }
				            if($booking_id->post_id != $_GET["booking_id"]){
				                $mphb_first_name = get_post_meta($booking_id->post_id, 'mphb_first_name', true);
				                $mphb_last_name = get_post_meta($booking_id->post_id, 'mphb_last_name', true);
				            	$booking_slot_switch[$booking_id->post_id]['name'] = $mphb_first_name." ".$mphb_last_name;
				                $mmm = get_post_meta($booking_id->post_id, 'mphb_place', true);
				                if($mmm){
				                    foreach($mmm AS $kk => $vv){
				                        if(isset($booking_slot_switch[$booking_id->post_id]['location'][$kk])){
				                			$booking_slot_switch[$booking_id->post_id]['location'][$kk] = array_merge($booking_slot_switch[$booking_id->post_id]['location'][$kk],$vv);
				                		}else{
				                			$booking_slot_switch[$booking_id->post_id]['location'][$kk] = $vv;	
				                		}
				                        if(isset($booking_slot[$kk])){
				                            $booking_slot[$kk] = array_merge($booking_slot[$kk],$vv);
				                        }else{
				                            $booking_slot[$kk] = $vv;
				                        }
				                    }
				                }    
				            }
				            
				        }
				        $count_locations = 0;
				        if($mphb_place){
					        foreach ($mphb_place as $key => $value) {
					        	$count_locations += count($value);
				        	}
				        }
				        $args = array(
				            'post_type' => 'arf_pt_table',
				            'posts_per_page' => -1,
				            'post_status' => 'publish',
				            'orderby' => 'post_title',
				            'order' => 'ASC'
				        );

				        if($table_selected_ids) {
				            $args['post__not_in'] = $table_selected_ids;
				        }
				        $arf_pt_tables = get_posts($args); 
				        ?>
				        <p>
				            <lable for="mphb_table_id"><?php _e('Table', 'motopress-hotel-booking'); ?></lable>
				            <br>
				            <select name="mphb_table_id[]" multiple="multiple" id="mphb_table_id" class="w-100">
				                <!-- <option value=""><?php _e('Select', 'arienzo_reservation_form') ?></option> -->
				                <?php foreach ( $arf_pt_tables as $table ) { ?>
				                    <option value="<?php echo $table->ID; ?>" <?php if(!is_array($mphb_table_id) && $mphb_table_id == $table->ID){echo "selected";}else if(is_array($mphb_table_id) && in_array($table->ID,$mphb_table_id)){echo "selected";} ?>><?php echo $table->post_title; ?></option>
				                <?php } ?>
				            </select>
				        </p>
				        <p>
			                <lable for="mphb_place_switch">Switch Slot</lable>
			                <br>
			                <select name="mphb_place_switch" id="mphb_place_switch" class="w-100" data-count="<?php echo $count_locations ?>">
			                	<option value="">Select</option>
			                    <?php foreach($booking_slot_switch AS $kk => $vv){ ?>
			                    <option  value="<?php _e($kk, 'arienzo_reservation_form') ?>"><?php _e($vv['name'], 'arienzo_reservation_form') ?></option>
			                    <?php } ?>
			                </select>
			                    <?php foreach($booking_slot_switch AS $kk => $vv){ ?>
			                    <div style="display:none;" id="mphb_location_data<?php echo $kk ?>"><?= json_encode($vv['location']) ?></div>
			                    <?php } ?>
			            </p>
				        <p>
			                <lable for="mphb_place_switch_location">Slot Location</lable>
			                <br>
			                <select name="mphb_place_switch_location[]" id="mphb_place_switch_location" class="w-100" multiple="multiple">
			                </select>
			            </p>
						<?php 
				    		    
				            $args = array(
				                'post_type' => 'location',
				                'posts_per_page' => -1,
				                'post_status' => 'publish',
				                'orderby' => 'post_title',
				                'order' => 'ASC'
				            );
				            $locations = get_posts($args);
						?>
						<?php foreach($locations AS $key => $value){ $ddd = get_field("location_names",$value->ID); $arr = array(); $ddd = explode("|",$ddd); if($ddd){ foreach($ddd AS $kk => $vv){ $arr = array_merge($arr,explode(",",$vv)); } } ?>
						    <!-- <p>
				                <lable for="mphb_place_<?php echo $value->ID; ?>"><?php echo $value->post_title; ?></lable>
				                <br>
				                <select name="mphb_place[<?php echo $value->ID; ?>][]" multiple="multiple" id="mphb_place_<?php echo $value->ID; ?>" class="w-100">
				                    <?php foreach($arr AS $kk => $vv){ ?>
				                    <option  <?php echo isset($booking_slot[$value->ID]) && in_array( $vv, $booking_slot[$value->ID]) ? "disabled" : "" ?>  <?php echo isset($mphb_place[$value->ID]) && in_array( $vv, $mphb_place[$value->ID]) ? "selected" : "" ?> value="<?php _e($vv, 'arienzo_reservation_form') ?>"><?php _e($vv, 'arienzo_reservation_form') ?></option>
				                    <?php } ?>
				                </select>
				            </p> -->
						<?php } ?>
				    <?php
			        if ($roomType->hasServices()) {
			            

			        $services = MPHB()->getServiceRepository()->findAll(array(
			            'post__in'         => $roomType->getServices(),
			            'suppress_filters' => true
			        ));

			        if (!empty($services)) {
			        ?>
			        <section id="mphb-services-details-<?php echo esc_attr($roomIndex); ?>" class="mphb-services-details mphb-checkout-item-section">
			            <h4 class="mphb-services-details-title">
			                <?php _e('Choose Additional Services', 'motopress-hotel-booking'); ?>
			            </h4>

			            <ul class="mphb_sc_checkout-services-list mphb_checkout-services-list">
			                <?php foreach ($services as $index => $service) {
			                    $serviceId = $service->getOriginalId();
			                    if ($service->isPayPerAdult() && $roomType->getAdultsCapacity() > 1) {
			                        $presetAdults = $roomType->getAdultsCapacity();
			                    }else{
			                        $presetAdults = $reservedRoom->getAdults();
			                    }
						        $serviceId = $service->getOriginalId();
						        

						        if (isset($rooms[$roomId]['presets']['services'][$serviceId])) {
						            $presetAdults = $rooms[$roomId]['presets']['services'][$serviceId]['adults'];
						            $adultsCapacity = $rooms[$roomId]['adults'];
						            if ($adultsCapacity != mphb_get_min_adults()) {
						                $presetAdults = min((int)$presetAdults, (int)$adultsCapacity);
						            }
						        }
			                    $presetChild = $roomType->getChildrenCapacity();

			                    
						        if (isset($rooms[$roomId]['presets']['children'])) {
						            $presetChild = $rooms[$roomId]['presets']['children'];
						        }

			                    $namePrefix = 'mphb_room_details[' . esc_attr($roomIndex) . '][services][' . esc_attr($index) . ']';
			                    $idPrefix = 'mphb_room_details-' . esc_attr($roomIndex) . '-service-' . $serviceId;
			                     //echo "<pre>"; print_r(); echo "</pre>";die; 
			                    $service = apply_filters('_mphb_translate_service', $service);
			                    $isSelected = false;


						        if (isset($rooms[$roomId]['presets']['services'][$serviceId])) {
						            $isSelected = true;
						        }


			                    $show_child = get_post_meta( $service->getId(), 'mphb_show_child', true );
			                    $mphb_couple_package = get_post_meta( $service->getId(), 'mphb_couple_package', true );
			                    ?>
			                    <li>
			                        <label for="<?php echo $idPrefix; ?>-id" class="mphb-checkbox-label">
			                            <input type="checkbox" id="<?php echo $idPrefix; ?>-id" name="<?php echo $namePrefix; ?>[id]" class="mphb_sc_checkout-service mphb_checkout-service" value="<?php echo $serviceId; ?>" <?php checked($isSelected); ?>>
			                            <?php echo $service->getTitle(); ?>
			                            <em>(<?php echo $service->getPriceWithConditions(false); ?>)</em>
			                        </label>

			                        <?php if ($service->isPayPerAdult() && $roomType->getAdultsCapacity() > 1) { ?>
			                            <label for="<?php echo $idPrefix; ?>-adults">
			                                <?php _e('for ', 'motopress-hotel-booking'); ?>
			                                <select name="<?php echo $namePrefix; ?>[adults]" id="<?php echo $idPrefix; ?>-adults" class="mphb_sc_checkout-service-adults mphb_checkout-service-adults">
			                                    <?php for ($i = 1; $i <= $roomType->getAdultsCapacity(); $i++) { ?>
			                                        <option value="<?php echo $i; ?>" <?php selected($presetAdults, $i); ?>>
			                                            <?php echo $i; ?>
			                                        </option>
			                                    <?php } ?>
			                                </select>
			                                <?php echo _x(' guest(s)', 'Example: Breakfast for X guest(s)', 'motopress-hotel-booking'); ?>
			                            </label>
			                            
			                            <?php if ($show_child && $roomType->getChildrenCapacity() > 1) { ?>
			                            <label for="<?php echo $idPrefix; ?>-child">
			                                <?php _e('for ', 'motopress-hotel-booking'); ?>
			                                <select name="<?php echo $namePrefix; ?>[child]" id="<?php echo $idPrefix; ?>-child" class="mphb_sc_checkout-service-child mphb_checkout-service-child">
			                                    <?php for ($i = 0; $i <= $roomType->getChildrenCapacity(); $i++) { ?>
			                                        <option value="<?php echo $i; ?>" <?php ($i) ? selected($presetChild, $i) : ""; ?>>
			                                            <?php echo $i; ?>
			                                        </option>
			                                    <?php } ?>
			                                </select>
			                                <?php echo _x(' Child(s)', 'Example: Breakfast for X Child(s)', 'motopress-hotel-booking'); ?>
			                            </label>
			                            <?php }else{ ?>
			                            <input type="hidden" name="<?php echo $namePrefix; ?>[child]" value="0">
			                            <?php } ?>
			                        <?php } else if(isset($_GET['page']) && $_GET['page'] == "mphb_add_new_booking"){ ?>
			                            <input type="hidden" name="<?php echo $namePrefix; ?>[adults]" value="1">
			                            <input type="hidden" name="<?php echo $namePrefix; ?>[child]" value="0">
			                        <?php }else{ ?>
			                            <?php if($mphb_couple_package){ ?>
			                                <select name="<?php echo $namePrefix; ?>[adults]" id="<?php echo $idPrefix; ?>-adults" class="mphb_sc_checkout-service-adults mphb_checkout-service-adults">
			                                    <?php for ($i = 0; $i <= $roomType->getAdultsCapacity(); $i++) { ?>
			                                        <option value="<?php echo $i; ?>" <?php ($i) ? selected($presetAdults, $i) : ""; ?>>
			                                            <?php echo $i; ?>
			                                        </option>
			                                    <?php } ?>
			                                </select>
			                                <?php echo _x(' Couples(s)', 'Example: Breakfast for X Couples(s)', 'motopress-hotel-booking'); ?>
			                            <?php }else{ ?>
			                                <input type="hidden" name="<?php echo $namePrefix; ?>[adults]" value="<?php echo  $presetAdults ?>">
			                                
			                            <?php } ?>
			                        <?php } ?>

			                        <?php if ($service->isFlexiblePay()) { ?>
			                            <?php
			                                $minQuantity = $service->getMinQuantity();
			                                $maxQuantity = $service->getMaxQuantityNumber();

			                                if ($service->isAutoLimit()) {
			                                    $maxQuantity = DateUtils::calcNights($booking->getCheckInDate(), $booking->getCheckOutDate());
			                                }

			                                $maxQuantity = max($minQuantity, $maxQuantity);

			                                $presetQuantity = apply_filters('mphb_sc_checkout_preset_service_quantity', $minQuantity, $service, $reservedRoom, $roomType);
			                                $presetQuantity = mphb_limit($presetQuantity, $minQuantity, $maxQuantity);
			                            ?>
			                            &#215; <input type="number" name="<?php echo $namePrefix; ?>[quantity]" class="mphb_sc_checkout-service-quantity mphb_checkout-service-quantity" value="<?php echo esc_attr($presetQuantity); ?>" min="<?php echo esc_attr($minQuantity); ?>" <?php echo !$service->isUnlimited() ? 'max="' . esc_attr($maxQuantity) . '"' : ''; ?> step="1"> <?php _e('time(s)', 'motopress-hotel-booking'); ?>
			                        <?php } // Is flexible pay? ?>
			                    </li>
			                <?php } ?>
			            </ul>
			        </section>
			        <?php } ?>
			        <?php } ?>
			        <?php
			        $namePrefix = 'mphb_room_details[' . esc_attr($roomIndex) . ']';
			        $idPrefix = 'mphb_room_details-' . esc_attr($roomIndex);
			      
					$allowedRates   = $roomDetails[$reservedRoom->getRoomId()]['allowed_rates'];

			        $defaultRate    = reset($allowedRates);
			       
					$adults         = $roomDetails[$reservedRoom->getRoomId()]['adults'];
					$children       = $roomDetails[$reservedRoom->getRoomId()]['children'];
			        $selectedRateId = "";

			        if($defaultRate){
			            $selectedRateId = $defaultRate->getOriginalId();     
			            
			            $roomId = $reservedRoom->getRoomId();

				        if (isset($rooms[$roomId]['presets']['rate_id'])) {
				            $presetId = $rooms[$roomId]['presets']['rate_id'];

				            // Don't set the unallowed rate
				            if (in_array($presetId, $rooms[$roomId]['allowed_rate_ids'])) {
				                $selectedRateId = $presetId;
				            }
				        }    
			        }
			        

			        if (count($allowedRates) > 1) {
			        	
			            ?>
			            <section class="mphb-rate-chooser mphb-checkout-item-section">
			                <h4 class="mphb-room-rate-chooser-title">
			                    <?php _e('Choose Rate', 'motopress-hotel-booking'); ?>
			                </h4>

			                <?php
			                foreach ($allowedRates as $rate) {
			                    $rate = apply_filters('_mphb_translate_rate', $rate);
			                    $rateId = $rate->getOriginalId();

			                    MPHB()->reservationRequest()->setupParameters(array(
			                        'adults'         => $adults,
			                        'children'       => $children,
			                        'check_in_date'  => $booking->getCheckInDate(),
			                        'check_out_date' => $booking->getCheckOutDate()
			                    ));

			                    $ratePrice = mphb_format_price($rate->calcPrice($booking->getCheckInDate(), $booking->getCheckOutDate()));

			                    $inputId = $idPrefix . '-rate-id-' . $rateId;
			                    $inputName = $namePrefix . '[rate_id]';

			                    ?>
			                    <p class="mphb-room-rate-variant">
			                        <label for="<?php echo esc_attr($inputId); ?>">
			                            <input type="radio" id="<?php echo esc_attr($inputId); ?>" name="<?php echo esc_attr($inputName); ?>" class="mphb_sc_checkout-rate mphb_checkout-rate mphb-radio-label" value="<?php echo esc_attr($rateId); ?>" <?php checked($selectedRateId, $rateId); ?>>
			                            <strong>
			                                <?php echo esc_html($rate->getTitle()) . ', ' . $ratePrice; ?>
			                            </strong>
			                        </label>
			                        <br>
			                        <?php echo esc_html($rate->getDescription()); ?>
			                    </p>
			                <?php } // For each allowed rate ?>
			            </section>
			        <?php } else { ?>
			            <input type="hidden" name="<?php echo esc_attr($namePrefix); ?>[rate_id]" value="<?php echo esc_attr($selectedRateId); ?>">
			        <?php } ?>
	            <?php } ?>
	        </div>
        </section>

        <p class="mphb-submit-button-wrapper">
            <input type="submit" name="edit-booking" class="button button-primary button-hero" value="<?php _e('Save', 'motopress-hotel-booking'); ?>">
        </p>
    </form>

	<?php
	}
	die;
}
add_action('wp_ajax_nopriv_change_booking_details', 'change_booking_details_fun');
add_action('wp_ajax_change_booking_details', 'change_booking_details_fun');

function change_booking_details_fun()
{
	if(isset($_POST['id']) && $_POST['id'] && isset($_POST['field']) && $_POST['field']){
		if($_POST['field'] == "name"){
			$fname= "";
			$lname= "";
			if(isset($_POST['data_val'])){
				$frname_v = explode(" ", $_POST['data_val']);
				$fname = $frname_v[0];
				unset($frname_v[0]);
			    if($frname_v){
			    	$lname = implode(" ", $frname_v);
			    }
			}

			update_post_meta($_POST['id'],"mphb_first_name",$fname);
			update_post_meta($_POST['id'],"mphb_last_name",$lname);
		}else if($_POST['field'] == "phone"){
			update_post_meta($_POST['id'],"mphb_phone",(isset($_POST['data_val']) ? $_POST['data_val'] : ""));
		}
	}
	echo json_encode(array());wp_die();
}
/*add_action('add_meta_boxes', 'booking_confiration_link_custom_meta');

function wpdocs_add_dashboard_widgets() {
    wp_add_dashboard_widget( 'dashboard_widget', 'Booking', 'dashboard_widget_function' );
}
add_action( 'wp_dashboard_setup', 'wpdocs_add_dashboard_widgets' );

function dashboard_widget_function( $post, $callback_args ) {
    esc_html_e( "Hello World, this is my first Dashboard Widget!", "textdomain" );
}*/